map $http_x_original_host $originalhost {
	default $http_x_original_host;
	"" $host;
}

server {

	set $base /srv/www/auth_resources/;
        root $base/;
	index index.html;

	# Enable modsecurity
	include snippets/modsecurity.conf;

	# Include security snippet
	include snippets/security.conf;

	# Include additional config
	include snippets/general.conf;

	# Logging
	access_log /var/log/nginx/auth.resources.gimb.tk.access.log;
	error_log /var/log/nginx/auth.resources.gimb.tk.error.log warn;

	server_name auth.resources.gimb.tk;

	location / {
		try_files $uri $uri/ $uri.html =404;
	}

	location /api/ {
		include uwsgi_params;
		uwsgi_param X-Real-IP $remote_addr;
		uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
		uwsgi_param X-Original-Host $originalhost;
		uwsgi_pass unix:/srv/services/authenticator/authenticator.sock;
	}

	listen 0.0.0.0:443 http2 ssl;
	listen [::]:443 http2 ssl;
	ssl_certificate /etc/letsencrypt/live/resources.gimb.tk/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/resources.gimb.tk/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
	if ($host = resources.gimb.tk) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	server_name auth.resources.gimb.tk;

	listen [::]:80;
	listen 80;
	return 404; # managed by Certbot
}
